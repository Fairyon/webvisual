doctype html
html
  head
    title Webvisual
    meta(name='viewport', charset='utf-8', content='width=device-width, initial-scale=1.0, user-scalable=yes, minimum-scale=0.8')
    script(src='components/webcomponentsjs/webcomponents-lite.js')
    script.
      window.Polymer = {
        dom: 'shady',
        lazyRegister: true
      };
    //- script(src='socket.io/socket.io.js')
    //- script(src='scripts/data-socket-repeater.js')
    link(rel='import', href='components/polymer/polymer.html')
    link(rel='import', href='elements/imports.html')
    link(rel='import', href='elements/style/app-theme.html')
  style(is="custom-style", include="app-theme").
    body {
      height: 100%;
      width: 100%;
      padding: 0;
      margin: 0;
      //- background: #669DB4;
      font-family: Fira Sans Light;
      font-weight: normal;
      display: flex;
    }
    div#background {
      //- background: radial-gradient(rgba(0,91,130,1) 80%, rgba(0,91,130,0.8));
    }
    .page {
      background: #BBB;
      color: #1f1f1f;
      height: 100%;
      width: 100%;
      top: 0;
      left: 0;
      position: absolute;
      display: flex;
      flex-direction: column;
    }
    chart-element {
    }
    sign-element {
      max-width: 6em;
      min-width: 6em;
    }

  body.page
    //- START-ANIMATION
    template#mainTemplate(is="dom-bind")
      section.page
        group-card
          sign-element
          chart-element
            each I in [1, 2]
              graph-element.content(label= "tests", id!= I)

    script.
      function update() {
        var date = new Date();
        if (!this) return;
        this.unshiftValues({x: +date, y: +(Math.random() * 1).toFixed(5) });
        if (this.values.length > 100)
          this.spliceValues(this.values.length - 1, 1); 
      }
      window.addEventListener('WebComponentsReady', function(e) {
        //- connect(['test']);
        var elems = document.querySelectorAll('[updatable]');
        elems = Array.prototype.slice.call(elems);
        elems.forEach(function(el) {
          el.__interval_id = setInterval(update.bind(el),1000);
        });
        setTimeout(function() {
          clearInterval(elems[1].__interval_id);
          Polymer.dom(elems[1].parentElement).removeChild(elems[1]);
          elems.splice(1,1);
        },5000)
      });
